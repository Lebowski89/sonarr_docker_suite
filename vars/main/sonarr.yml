---

################################
# API
################################

sonarr_api_key_is_enabled: '{{ (sonarr_api_key is defined) and
                               (sonarr_api_key is not none) and
                               (sonarr_api_key | trim | length > 0) }}'

################################
# NETWORK
################################

sonarr_network_default_bind:
  - name: '{{ sonarr_network_backend }}'
sonarr_network_postgres_bind:
  - name: '{{ sonarr_postgres_network }}'
sonarr_network_traefik_bind:
  - name: '{{ sonarr_traefik_network }}'
sonarr_network_prometheus_bind:
  - name: '{{ sonarr_prometheus_network }}'

sonarr_networks: '{{ sonarr_network_default_bind
                     + (sonarr_network_postgres_bind
                        if sonarr_toggles_enable_postgres
                        else [])
                     + (sonarr_network_traefik_bind
                        if sonarr_toggles_enable_traefik
                        else [])
                     + (sonarr_network_prometheus_bind
                        if sonarr_toggles_enable_metrics
                        else []) }}'

sonarr_network_backend_is_enabled: '{{ (sonarr_network_backend_driver is defined) and
                                       (sonarr_network_backend_driver is not none) and
                                       (sonarr_network_backend_driver | trim | length > 0) and
                                       (sonarr_network_backend_subnet is defined) and
                                       (sonarr_network_backend_subnet is not none) and
                                       (sonarr_network_backend_subnet | trim | length > 0) }}'

################################
# ENV
################################

sonarr_env_default:
  PUID: '{{ sonarr_env_puid }}'
  PGID: '{{ sonarr_env_pgid }}'
  TZ: '{{ sonarr_env_timezone }}'

sonarr_env_themepark_local:
  TP_SCHEME: 'http'
  TP_DOMAIN: '{{ sonarr_themepark_domain_local }}'
  TP_HOTIO: 'true'
  TP_THEME: '{{ sonarr_themepark_domain_local_theme }}'

sonarr_envs: '{{ sonarr_env_default
                 | combine((sonarr_env_themepark_local
                            if sonarr_toggles_enable_themepark_local
                            else [])) }}'
              
################################
# LABELS
################################

sonarr_labels: '{{ sonarr_traefik_labels_default
                   | combine(sonarr_traefik_labels_router)
                   | combine(sonarr_traefik_labels_router_secure)
                   | combine((sonarr_traefik_labels_themepark
                              if sonarr_toggles_enable_themepark_traefik
                              else [])) }}'

################################
# BINDS
################################

sonarr_volumes: '{{ sonarr_volumes_binds_default
                    + (sonarr_volumes_binds_themepark
                       if sonarr_toggles_enable_themepark_local
                       else [])
                    + (sonarr_nfs_volume_bind
                       if sonarr_toggles_enable_nfs_volume
                       else [])
                    + (sonarr_rclone_volume_bind
                       if sonarr_toggles_enable_rclone
                       else []) }}'

################################
# AUTHELIA
################################

sonarr_authelia_is_enabled: '{{ (sonarr_authelia_container_name is defined) and
                                (sonarr_authelia_container_name is not none) and
                                (sonarr_authelia_container_name | trim | length > 0) }}'

################################
# TRAEFIK
################################

sonarr_traefik_labels_default:
  traefik.enable: 'true'
  traefik.docker.network: '{{ sonarr_traefik_network }}'

sonarr_traefik_labels_router:
  ## http
  traefik.http.routers.sonarr-rtr.entrypoints: 'http'
  traefik.http.routers.sonarr-rtr.rule: '{{ sonarr_traefik_http_rule }}'
  traefik.http.routers.sonarr-rtr.middlewares: '{{ sonarr_traefik_http_middlewares_bind }}'
  traefik.http.routers.sonarr-rtr.priority: '{{ sonarr_traefik_http_priority }}'
  traefik.http.routers.sonarr-rtr.service: 'sonarr-rtr-svc'
  traefik.http.services.sonarr-rtr-svc.loadbalancer.server.port: '{{ sonarr_traefik_port }}'
  ## http-api
  traefik.http.routers.sonarr-api-rtr.entrypoints: 'http'
  traefik.http.routers.sonarr-api-rtr.rule: '{{ sonarr_traefik_http_api_rule }}'
  traefik.http.routers.sonarr-api-rtr.middlewares: '{{ sonarr_traefik_http_api_middlewares_bind }}'
  traefik.http.routers.sonarr-api-rtr.priority: '{{ sonarr_traefik_http_api_priority }}'
  traefik.http.routers.sonarr-api-rtr.service: 'sonarr-rtr-svc'

sonarr_traefik_labels_router_secure:
  ## https
  traefik.http.routers.sonarr-rtr-secure.entrypoints: 'https'
  traefik.http.routers.sonarr-rtr-secure.rule: '{{ sonarr_traefik_https_rule }}'
  traefik.http.routers.sonarr-rtr-secure.middlewares: '{{ sonarr_traefik_https_middlewares_bind }}'
  traefik.http.routers.sonarr-rtr-secure.priority: '{{ sonarr_traefik_https_priority }}'
  traefik.http.routers.sonarr-rtr-secure.service: 'sonarr-rtr-secure-svc'
  traefik.http.routers.sonarr-rtr-secure.tls.certresolver: '{{ sonarr_traefik_tls_certresolver }}'
  traefik.http.routers.sonarr-rtr-secure.tls.options: '{{ sonarr_traefik_tls_options }}'
  traefik.http.services.sonarr-rtr-secure-svc.loadbalancer.server.port: '{{ sonarr_traefik_port }}'
  ## https-api
  traefik.http.routers.sonarr-api-rtr-secure.entrypoints: 'https'
  traefik.http.routers.sonarr-api-rtr-secure.rule: '{{ sonarr_traefik_https_api_rule }}'
  traefik.http.routers.sonarr-api-rtr-secure.middlewares: '{{ sonarr_traefik_https_api_middlewares_bind }}'
  traefik.http.routers.sonarr-api-rtr-secure.priority: '{{ sonarr_traefik_https_api_priority }}'
  traefik.http.routers.sonarr-api-rtr-secure.service: 'sonarr-rtr-secure-svc'
  traefik.http.routers.sonarr-api-rtr-secure.tls.certresolver: '{{ sonarr_traefik_tls_certresolver }}'
  traefik.http.routers.sonarr-api-rtr-secure.tls.options: '{{ sonarr_traefik_tls_options }}'
  ## theme-park
sonarr_traefik_labels_themepark:
  traefik.http.middlewares.themepark-sonarr.plugin.themepark.app: 'sonarr'
  traefik.http.middlewares.themepark-sonarr.plugin.themepark.theme: '{{ sonarr_traefik_themepark_theme }}'

sonarr_traefik_is_enabled: '{{ (sonarr_traefik_domain is defined) and
                               (sonarr_traefik_domain is not none) and
                               (sonarr_traefik_domain | trim | length > 0) }}'

sonarr_traefik_network_is_enabled: '{{ (sonarr_traefik_network_driver is defined) and
                                       (sonarr_traefik_network_driver is not none) and
                                       (sonarr_traefik_network_driver | trim | length > 0) and
                                       (sonarr_traefik_network_subnet is defined) and
                                       (sonarr_traefik_network_subnet is not none) and
                                       (sonarr_traefik_network_subnet | trim | length > 0) }}'

sonarr_traefik_http_middlewares_bind: '{{ sonarr_traefik_http_middlewares
                                          + (",cloudflarewarp@docker"
                                             if (sonarr_toggles_enable_cloudflarewarp)
                                             else "")
                                          + (",authelia@docker"
                                             if (sonarr_toggles_enable_authelia_middleware)
                                             else "") }}'

sonarr_traefik_http_api_middlewares_bind: '{{ sonarr_traefik_http_api_middlewares
                                              + (",cloudflarewarp@docker"
                                                 if (sonarr_toggles_enable_cloudflarewarp)
                                                 else "") }}'

sonarr_traefik_https_middlewares_bind: '{{ sonarr_traefik_https_middlewares
                                           + (",cloudflarewarp@docker"
                                              if (sonarr_toggles_enable_cloudflarewarp)
                                              else "")
                                           + (",authelia@docker"
                                              if (sonarr_toggles_enable_authelia_middleware)
                                              else "") 
                                           + (",themepark-sonarr"
                                              if (sonarr_toggles_enable_themepark_traefik)
                                              else "") }}'

sonarr_traefik_https_api_middlewares_bind: '{{ sonarr_traefik_https_api_middlewares
                                               + (",cloudflarewarp@docker"
                                                  if (sonarr_toggles_enable_cloudflarewarp)
                                                  else "") }}'

################################
# CLOUDFLARE
################################

sonarr_cloudflare_is_enabled: '{{ (sonarr_cloudflare_api_token is defined) and
                                  (sonarr_cloudflare_api_token is not none) and
                                  (sonarr_cloudflare_api_token | trim | length > 0) }}'
