---

- name: Apply exporter prometheus scrape config
  ansible.builtin.blockinfile:
    path: '{{ lookup("vars", sonarr_prefix + "_prometheus_paths_location") }}/prometheus.yml'
    marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ sonarr_basics_name }}-exporter #"
    block: |
      {% filter indent(width=2, first=true) %}
      - job_name: {{ lookup("vars", sonarr_prefix + "_prometheus_exporter_basics_name") }}
        scrape_interval: 1m
        static_configs:
          - targets: ['{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_basics_name") }}:{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_ports_cont") }}']
      {% endfilter %}
  notify:
    - restart prometheus

- name: Register exporter container
  community.docker.docker_container_info:
    name: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_basics_name") }}'
  register: sonarr_prometheus_exporter_container_result

- name: Create prometheus exporter container
  when: not sonarr_prometheus_exporter_container_result.exists
  community.docker.docker_container:
    name: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_basics_name") }}'
    image: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_basics_image_repo") }}:{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_basics_image_tag") }}'
    command: ["sonarr"]
    networks: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_networks") }}'
    env:
      PUID: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_env_puid") }}'
      PGID: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_env_pgid") }}'
      TZ: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_env_timezone") }}'
      PORT: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_ports_cont") }}'
      URL: 'http://{{ lookup("vars", sonarr_prefix + "_basics_name") }}:{{ lookup("vars", sonarr_prefix + "_ports_cont") }}'
      API_KEY: '{{ lookup("vars", sonarr_prefix + "_api_key") }}'
      ENABLE_ADDITIONAL_METRICS: 'true'
    ports:
      - '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_ports_host") }}:{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_ports_cont") }}'
    restart_policy: '{{ lookup("vars", sonarr_prefix + "_prometheus_exporter_basics_restart_policy") }}'
